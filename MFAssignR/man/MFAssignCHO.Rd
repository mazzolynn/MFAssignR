% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MFAssignCHO.R
\name{MFAssignCHO}
\alias{MFAssignCHO}
\title{Assigns all possible CHO molecular formulae to each row of input data frame}
\usage{
MFAssignCHO(
  peaks,
  isopeaks = "none",
  ionMode,
  lowMW = 100,
  highMW = 1000,
  POEx = 0,
  NOEx = 0,
  Ex = 0,
  Mx = 0,
  NH4x = 0,
  Zx = 1,
  Ox = 30,
  ppm_err = 3,
  SN = 0,
  O_Cmin = 0,
  O_Cmax = 2.5,
  H_Cmin = 0.3,
  H_Cmax = 3,
  DBEOmin = -13,
  DBEOmax = 13,
  Omin = 0,
  max_def = 0.9,
  min_def = 0.5,
  HetCut = "off",
  NMScut = "on",
  DeNovo = 1000,
  nLoop = 5,
  Ambig = "off",
  MSMS = "off"
)
}
\arguments{
\item{peaks}{data frame, Monoisotopic Masses}

\item{isopeaks}{data frame, Isotopic Masses. Default is "none"}

\item{ionMode}{string: ("neg", "pos")}

\item{lowMW}{numeric:
Sets the lower limit of molecular mass to be assigned. Default is 100.}

\item{highMW}{numeric:
Sets the upper limit of molecular mass to be assigned. Default is 1000.}

\item{POEx}{numeric:
If set to 1 and ionMode is positive, positive mode odd electron ions can be assigned.
Default is 0}

\item{NOEx}{numeric:
If set to 1 and ionMode is negative, negative mode odd electron ions can be assigned.
Default is 0}

\item{Ex}{numeric:
Sets the amount of Chlorine 37 to be used in assignment. Default is 0.}

\item{Mx}{numeric:
Sets the amount of Sodium adduct to be used in assignment. Default is 0.}

\item{NH4x}{numeric:
Sets the amount of Ammonium adduct to be used in assignment. Default is 0.}

\item{Zx}{numeric:
Sets the amount of charge to be used in assignment. Default is 1.}

\item{Ox}{numeric:
Ox sets the maximum number of oxygen looked for in the CHOFIT core, it limits the number of loops performed.}

\item{ppm_err}{numeric:
ppm_err parameter sets the error tolerance (ppm) for formula assignment and polyisotope matching. Default is 3.}

\item{SN}{numeric:
SN parameter set the signal to noise cut for formula assignment. Default is 0.}

\item{O_Cmin}{numeric:
O_Cmin parameter sets the minimum allowed oxygen to carbon ratio. Default is 0.}

\item{O_Cmax}{numeric:
The O_Cmax parameter sets the upper limit for oxygen to carbon ratio. Default is 2.5.}

\item{H_Cmin}{numeric:
H_Cmin parameter sets lower limit for hydrogen to carbon ratio. Default is 0.1.}

\item{H_Cmax}{numeric:
H_Cmax parameter sets upper limit for hydrogen to carbon ratio for assigned formulas.
Default is 3.}

\item{DBEOmin}{numeric:
DBEOmin parameter sets lower limit for DBE minus oxygen QA parameter. Default is -13.}

\item{DBEOmax}{numeric:
DBEOmax parameter sets upper limit for DBE minus oxygen QA parameter. Default is 13.}

\item{Omin}{numeric:
Omin parameter sets lower limit for oxygen number in assigned formula. Default is 0.}

\item{max_def}{numeric:
Value for upper limit of mass defect for using floor() instead of round() for KMD. Default is 0.9}

\item{min_def}{numeric:
Value for lower limit of mass defect for using floor() instead of round() for KMD. Default is 0.5}

\item{HetCut}{character:
HetCut turns on or off the high heteroatom QA parameter. Default is "off".}

\item{NMScut}{character:
NMScut turns on or off the nominal mass series QA parameter. Default is “on”.}

\item{DeNovo}{numeric:
DeNovo sets the de novo cut point for the data. Default is 1000.}

\item{nLoop}{numeric:
nLoops sets the number of times the KMD and z* series assignment loops. Default is 5.}

\item{Ambig}{character:
Turns on or off increased ambiguity for assignments. Default is "off".}

\item{MSMS}{character:
Turns on or off CH2 KMD prescreening before initial assignment. Default is "off".}
}
\value{
list(Unambig = Unambig, Ambig = Ambigout, None = unassigned, MSAssign = MZ,
         Error = Error, MSgroups = MZgroups, VK = VK)

  Unambig - data frame containing unambiguous assignments
  Ambig - data frame containing ambiguous assignments
  None - data frame containing unassigned masses
  MSAssign - ggplot of mass spectrum highlighting assigned/unassigned
  Error - ggplot of the Error vs. m/z
  MSgroups - ggplot of mass spectrum colored by molecular group
  VK - ggplot of van Krevelen plot, colored by molecular group
}
\description{
MFAssignCHO() assigns all possible molecular formulae to each
mass in the input file, subject to user constraints on the moles of
C, H, O
}
\details{
This function operates in the same way as MFAssign() but only assigns
carbon, hydrogen, and oxygen formulas, heteroatoms are not included.
Basic QA steps are included within the function,more detail about
these QA steps can be seen in the vignette and user manual attached to this package.
Additionally, an option to remove ambiguous assignments based on choosing
the formula with the fewest number of heteroatoms (Ohno and Ohno, 2013), and
the CH4 vs O replacement nominal mass series (Koch et al., 2007) is included.
Most of these QA parameters can be adjusted from outside the function.

Positive mode odd-electron formula assignment is possible using the POEx
parameter. If set to 1 positive mode odd-electron ionized masses can be
assigned. This is only really needed for APCI and APPI ionization modes.
This option is currently unavailable, but will be addressed in a future release.

The Ox term sets the number of loops performed by the CHOFIT core by defining the
maximum oxygen allowed to be looked for. Three oxygen is equal to one loop due to
the low mass moiety used in CHOFIT (Perdue and Green 2015). The default setting is
30 oxygen, so it is limited to 10 loops. It can be increased if necessary.

The input dataframe should have two columns, the first column should contain the
relative abundance or intensity for the ion mass and the second column should contain
the ion mass, either positive or negative mode. The function can also handle an additional
input dataframe containing the masses identified as istopic by the IsoFiltR function. The
outputs of that function can be directly put into this function as peaks and isopeaks,
doing so will allow likely 13C isotope masses to be match to assigned monoisotopic masses.
The inclusion of an isotopic mass list is not required, however.
}
\examples{
MFAssignCHO(peaks = Mono_df, isopeaks = Iso_df, "neg", lowMW = 200, highMW = 700)
MFAssignCHO(peaks = Mono_df, isopeaks = Iso_df, "neg", lowMW = 100, highMW = 1000)
}
